// Generated by CoffeeScript 1.10.0
(function() {
  TopViewer.ScalarControl = (function() {
    ScalarControl._scalarControls = [];

    function ScalarControl(uiArea, options) {
      this.uiArea = uiArea;
      this.options = options;
      this.constructor._scalarControls.push(this);
      this.$element = $("<div class='scalar-control " + this.options["class"] + "'></div>");
      this.options.$parent.append(this.$element);
      this.scalarSelectionControl = new TopViewer.DropdownControl(this.uiArea, {
        $parent: this.$element,
        "class": 'scalar-selector',
        value: null,
        text: this.options.saveState.name || 'None',
        onChange: (function(_this) {
          return function(value) {
            _this.options.saveState.name = _this.scalarSelectionControl.dropdownControl.options.text;
            return _this.value = value;
          };
        })(this)
      });
      this.scalarSelectionControl.addValue('None', null);
    }

    ScalarControl.addScalar = function(name, scalar) {
      var control, i, len, ref, results;
      ref = this._scalarControls;
      results = [];
      for (i = 0, len = ref.length; i < len; i++) {
        control = ref[i];
        results.push(control.addScalar(name, scalar));
      }
      return results;
    };

    ScalarControl.prototype.addScalar = function(name, scalar) {
      this.scalarSelectionControl.addValue(name, scalar);
      if (name === this.scalarSelectionControl.dropdownControl.options.text) {
        this.scalarSelectionControl.setValue(scalar);
      }
      if (!this.scalarSelectionControl.dropdownControl.value) {
        return this.scalarSelectionControl.setValue(scalar);
      }
    };

    return ScalarControl;

  })();

}).call(this);

//# sourceMappingURL=scalarcontrol.js.map
