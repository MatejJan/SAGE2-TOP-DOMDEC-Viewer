// Generated by CoffeeScript 1.10.0
(function() {
  TopViewer.CheckboxControl = (function() {
    function CheckboxControl(uiArea, options) {
      var valueControl;
      this.uiArea = uiArea;
      this.options = options;
      this._value = this.options.value;
      if (!this.options.parent) {
        if (this._value == null) {
          this._value = false;
        }
      }
      this.$element = $("<div class=\"checkbox-control " + this.options["class"] + "\">\n  <span class=\"value\"></span> <span class=\"name\">" + this.options.name + "</span>\n</div>");
      this.$value = this.$element.find('.value');
      this._updateControl();
      this.options.$parent.append(this.$element);
      valueControl = new TopViewer.UIControl(this.uiArea, this.$element);
      valueControl.mousedown((function(_this) {
        return function(position) {
          if (_this.options.parent) {
            if (_this._value != null) {
              return _this.setValue(_this._value ? false : null);
            } else {
              return _this.setValue(true);
            }
          } else {
            return _this.setValue(!_this._value);
          }
        };
      })(this));
    }

    CheckboxControl.prototype.setName = function(name) {
      return this.$element.find('.name').text(name);
    };

    CheckboxControl.prototype.value = function() {
      var ref;
      if (this._value != null) {
        return this._value;
      }
      return (ref = this.options.parent) != null ? ref.value() : void 0;
    };

    CheckboxControl.prototype.setValue = function(value) {
      var base;
      this._value = value;
      this._updateControl();
      return typeof (base = this.options).onChange === "function" ? base.onChange(this._value, this) : void 0;
    };

    CheckboxControl.prototype._updateControl = function() {
      this.$value.removeClass('true').removeClass('false').removeClass('inherit');
      if (this._value != null) {
        if (this._value) {
          return this.$value.addClass('true');
        } else {
          return this.$value.addClass('false');
        }
      } else {
        return this.$value.addClass('inherit');
      }
    };

    return CheckboxControl;

  })();

}).call(this);

//# sourceMappingURL=checkboxcontrol.js.map
