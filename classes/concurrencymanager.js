// Generated by CoffeeScript 1.10.0
(function() {
  TopViewer.ConcurrencyManager = (function() {
    function ConcurrencyManager(options) {
      this.options = options;
      this._concurrentItemsRunning = 0;
      this._maxConcurrentItemsRunning = 4;
      this._nextItemIndexToRun = 0;
      this._itemsCompleted = 0;
      this._runStart = new Date();
      this.processRunQueue();
    }

    ConcurrencyManager.prototype.processRunQueue = function() {
      var item;
      if (this._nextItemIndexToRun == null) {
        return;
      }
      if (this._nextItemIndexToRun >= this.options.items.length) {
        return;
      }
      if (this._concurrentItemsRunning >= this._maxConcurrentItemsRunning) {
        return;
      }
      item = this.options.items[this._nextItemIndexToRun];
      item[this.options.methodName]((function(_this) {
        return function() {
          var base;
          _this._itemsCompleted++;
          _this._concurrentItemsRunning--;
          _this.processRunQueue();
          if (typeof (base = _this.options).onProgress === "function") {
            base.onProgress(_this.progress(), item);
          }
          if (_this._itemsCompleted === _this.options.items.length) {
            return _this._complete();
          }
        };
      })(this));
      this._nextItemIndexToRun++;
      this._concurrentItemsRunning++;
      return this.processRunQueue();
    };

    ConcurrencyManager.prototype.progress = function() {
      return this._itemsCompleted / this.options.items.length;
    };

    ConcurrencyManager.prototype._complete = function() {
      var base, runEnd, runTime;
      runEnd = new Date();
      runTime = runEnd - this._runStart;
      console.log("Concurrency manager completed in " + runTime + "ms");
      return typeof (base = this.options).onComplete === "function" ? base.onComplete() : void 0;
    };

    return ConcurrencyManager;

  })();

}).call(this);

//# sourceMappingURL=concurrencymanager.js.map
